package com.gst.immo.db;
// Generated Feb 20, 2016 1:55:06 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Query generated by hbm2java
 */
@Entity
@Table(name = "query", catalog = "immo")
public class Query implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private int queryId;
	private Date dateTime;
	private String query;
	private Set<SubQuery> subQueries = new HashSet<SubQuery>(0);

	public Query() {
	}

	public Query(Date dateTime) {
		this.dateTime = dateTime;
	}

	public Query(Date dateTime, String query, Set<SubQuery> subQueries) {
		this.dateTime = dateTime;
		this.query = query;
		this.subQueries = subQueries;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "query_id", unique = true, nullable = false)
	public int getQueryId() {
		return this.queryId;
	}

	public void setQueryId(int queryId) {
		this.queryId = queryId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_time", nullable = false, insertable = false, length = 19)
	public Date getDateTime() {
		return this.dateTime;
	}

	public void setDateTime(Date dateTime) {
		this.dateTime = dateTime;
	}

	@Column(name = "query", length = 400)
	public String getQuery() {
		return this.query;
	}

	public void setQuery(String query) {
		this.query = query;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "query")
	public Set<SubQuery> getSubQueries() {
		return this.subQueries;
	}

	public void setSubQueries(Set<SubQuery> subQueries) {
		this.subQueries = subQueries;
	}

}
