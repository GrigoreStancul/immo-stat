package com.gst.immo.db;
// Generated Feb 20, 2016 1:55:06 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ExposeBase generated by hbm2java
 */
@Entity
@Table(name = "expose_base", catalog = "immo")
public class ExposeBase implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private long exposeId;
	private Date updateTime;
	private String htmlPage;
	private Set<SubqueryToExpose> subqueryToExposes = new HashSet<SubqueryToExpose>(0);

	public ExposeBase() {
	}

	public ExposeBase(long exposeId, Date updateTime) {
		this.exposeId = exposeId;
		this.updateTime = updateTime;
	}

	public ExposeBase(int exposeId, Date updateTime, String htmlPage, Set<SubqueryToExpose> subqueryToExposes) {
		this.exposeId = exposeId;
		this.updateTime = updateTime;
		this.htmlPage = htmlPage;
		this.subqueryToExposes = subqueryToExposes;
	}

	@Id

	@Column(name = "expose_id", unique = true, nullable = false)
	public long getExposeId() {
		return this.exposeId;
	}

	public void setExposeId(long exposeId) {
		this.exposeId = exposeId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_time", nullable = false, insertable = false, length = 19)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Column(name = "html_page")
	public String getHtmlPage() {
		return this.htmlPage;
	}

	public void setHtmlPage(String htmlPage) {
		this.htmlPage = htmlPage;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "exposeBase")
	public Set<SubqueryToExpose> getSubqueryToExposes() {
		return this.subqueryToExposes;
	}

	public void setSubqueryToExposes(Set<SubqueryToExpose> subqueryToExposes) {
		this.subqueryToExposes = subqueryToExposes;
	}

}
